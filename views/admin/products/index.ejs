<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Character encoding for the document -->
    <meta charset="UTF-8">
    
    <!-- Viewport settings for responsiveness on mobile devices -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <!-- Title of the page displayed in the browser tab -->
    <title>Administration</title>
    
    <!-- Link to the external stylesheet for the admin page -->
    <link rel="stylesheet" href="/stylesheets/style-admin.css">
</head>
<body>

    <!-- Header section of the page -->
    <header>
        <!-- Link to navigate back to the product list in the admin panel -->
        <a href="/admin/products">
            <!-- Main heading for the administration section -->
            <h1>Administration</h1>
        </a>
    </header>

    <!-- Main content container -->
    <div class="container">
        
        <!-- Navigation menu -->
        <nav>
            <ul>
                <!-- List item linking to the products section -->
                <li><a href="#">Produkter</a></li>
            </ul>
        </nav>

        <!-- Main content section for displaying products -->
        <main>
            
            <!-- Header for the product list section -->
            <div class="products-header">
                <h2>Produkter</h2>
                
                <!-- Link to the form for adding a new product -->
                <div>
                    <button id="toggleProductsButton">Ladda Produkter</button>
                    <a href="/admin/products/add">
                        <!-- Button for adding a new product -->
                        <button>
                            Ny produkt
                        </button>
                    </a>
                    </div>
                </div>
            

            <!-- Table displaying the list of products -->
            <table id="productTable">
                <thead>
                    <tr>
                        <!-- Table headers for product name, category, SKU, and price -->
                        <th>Namn</th>
                        <th>Kategori</th>
                        <th>SKU</th>
                        <th>Pris</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Loop through the products array to display each product's details -->
                    <% products.forEach(product => { %>
                        <tr>
                            <!-- Table row displaying product's title, category, SKU, and price -->
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </main>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            let productsLoaded = false; // Track whether products are currently shown
    
            // Function to add product details to the table
            function addProductsToTable(products) {
                const tableBody = document.querySelector('#productTable tbody');
                
                products.forEach(product => {
                    const newRow = document.createElement('tr');
                    
                    newRow.innerHTML = `
                        <td>${product.title}</td>
                        <td>${product.category}</td>
                        <td>${product.sku}</td>
                        <td>${product.price}</td>
                    `;
                    
                    tableBody.appendChild(newRow);
                });
            }
    
            // Function to remove all product rows from the table
            function removeProductsFromTable() {
                const tableBody = document.querySelector('#productTable tbody');
                tableBody.innerHTML = ''; // Clear all rows in the table body
            }
    
            // Fetch product data from the server and toggle display
            async function toggleProducts() {
                const tableBody = document.querySelector('#productTable tbody');
    
                if (productsLoaded) {
                    console.log("Removing products...");
                    removeProductsFromTable();
                    productsLoaded = false;
                } else {
                    console.log("Fetching products...");
                    try {
                        const response = await fetch('/products');
                        if (!response.ok) throw new Error("Network response was not ok");
                        
                        const products = await response.json();
                        console.log("Fetched products:", products); // Debugging step
                        addProductsToTable(products);
                        productsLoaded = true;
                    } catch (error) {
                        console.error('Error fetching products:', error);
                    }
                }
            }
    
            // Attach event listener to the button
            document.getElementById('toggleProductsButton').addEventListener('click', toggleProducts);
        });
    </script>
    
</body>
</html>
